module FFI
  type ffi_type = Type | DataConverter | Symbol
  type type_map = Hash[Symbol, Type]

  CallbackInfo: singleton(FunctionType)
  FunctionInfo: singleton(FunctionType)
  NativeLibrary: singleton(DynamicLibrary)

  VERSION: String
  CURRENT_PROCESS: Object
  USE_THIS_PROCESS_AS_LIBRARY: Object
  TypeDefs: type_map

  #TODO NativeType embeds

  def self.errno: () -> Numeric
  def self.errno=: (Numeric) -> nil
  def self.find_type: (ffi_type name, ?type_map type_map) -> Type
  def self.map_library_name: (_ToS lib) -> String
  def self.type_size: (ffi_type type) -> Numeric
  def self.typedef: (ffi_type old, Symbol add) -> Type
  alias self.add_typedef self.typedef
end
